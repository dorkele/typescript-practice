{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS,EAAT,CAAb;AAEA,ADGA,ICHI,CAAC,EAAL,CAAQ,IDGR,ICHA,EAAkB,YAAA;AACd,ADKA,ECLA,OAAO,CAAC,CDKR,ECLA,CAAY,CDKZ,CAAoB,IAApB,EAAmC,QCLnC;AACH,ADIuB,CCNxB,QDMwB,IAAA,GAAA,IAAA;ACHxB,ADCI,ICDA,CAAC,EAAL,CAAQ,CDCJ,MAAA,CCDJ,EAAkB,ADC0B,EAAxC,UCDc;AACd,ADEuC,ECFvC,OAAO,CAAC,GAAR,CAAY,cAAZ;AACH,CAFD;AAGA,ADEI,EAAA,ECFA,CAAC,CDED,CCFJ,ADEI,CCFI,QDEJ,CAAA,GAAA,CCFJ,EAAuB,ADEnB,UAAI,ECFe,MDEnB,EAAoB;ACDpB,ADEI,ECFJ,OAAO,CAAC,CDEG,ECFX,CAAY,EDEI,IAAL,CAAU,QAAV,CAAP,ICFJ;AACH,ADEI,CCJL,EDEI;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;AACjB,IAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;AACH,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACpC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACH,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACrB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACpC;AACH;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAS;AAAK,aAAA,QAAQ,EAAR;AAAU,KAAzC;AACH,GARD;;AASJ,SAAA,IAAA;AA5BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n    name?: string;\r\n    age?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n    events: { [key: string]: Callback[] } = {};\r\n\r\n    constructor(private data: UserProps) {}\r\n\r\n    get(propName: string): number | string {\r\n        return this.data[propName];\r\n    }\r\n\r\n    set(update: UserProps): void {\r\n        Object.assign(this.data, update);\r\n    }\r\n\r\n    on(eventName: string, callback: Callback): void {\r\n        const handlers = this.events[eventName] || [];\r\n        handlers.push(callback);\r\n        this.events[eventName] = handlers;\r\n    }\r\n\r\n    trigger(eventName: string): void {\r\n        const handlers = this.events[eventName];\r\n\r\n        if (!handlers || handlers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        handlers.forEach((callback) => callback());\r\n    }\r\n}\r\n","import { User } from \"./models/User\";\r\n\r\nconst user = new User({});\r\n\r\nuser.on(\"lalala\", () => {\r\n    console.log(\"pjevaj pticica\");\r\n});\r\nuser.on(\"lalala\", () => {\r\n    console.log(\"suti pticica\");\r\n});\r\nuser.on(\"baaaalalala\", () => {\r\n    console.log(\"ne pricaj gluposti\");\r\n});\r\n"]}